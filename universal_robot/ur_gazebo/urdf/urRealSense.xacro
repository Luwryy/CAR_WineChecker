<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg robot_model)_robot">
  <!--
    This is a top-level xacro instantiating the Gazebo-specific version of the
    'ur_robot' macro (ie: 'ur_robot_gazebo') and passing it values for all its
    required arguments.

    This file should be considered the Gazebo-specific variant of the file
    with the same name in the ur_description package. It accepts the same
    arguments, but instead of configuring everything for a real robot, will
    generate a Gazebo-compatible URDF with a ros_control hardware_interface
    attached to it.

    Only use this top-level xacro if you plan on spawning the robot in Gazebo
    'by itself', without any gripper or any other geometry attached.

    If you need to attach an end-effector, camera or need to integrate the
    robot into a larger workcell and want to spawn that as a single entity in
    Gazebo, DO NOT EDIT THIS FILE.

    Instead: create a new top-level xacro, give it a proper name, include the
    required '.xacro' files, instantiate the models (ie: call the macros) and
    connect everything by adding the appropriate joints.
  -->

  <!--
    Import main macro.

    NOTE: this imports the Gazebo-wrapper main macro, NOT the regular
          xacro macro (which is hosted by ur_description).
  -->
  <xacro:include filename="$(find ur_gazebo)/urdf/ur_macro.xacro"/>


  <xacro:include filename='$(find realsense2_description)/urdf/test_d435i_camera.urdf.xacro'/>

  <!--Declare arguments -->
  <xacro:arg name="joint_limit_params" default=""/>
  <xacro:arg name="physical_params" default=""/>
  <xacro:arg name="kinematics_params" default=""/>
  <xacro:arg name="visual_params" default=""/>
  <!--
    legal values:
      - hardware_interface/PositionJointInterface
      - hardware_interface/VelocityJointInterface
      - hardware_interface/EffortJointInterface

    NOTE: this value must correspond to the controller configured in the
          controller .yaml files in the 'config' directory.
  -->
  <xacro:arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface"/>
  <xacro:arg name="safety_limits" default="false"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:arg name="safety_k_position" default="20"/>

  <!-- Instantiate the Gazebo robot and pass it all the required arguments. -->
  <xacro:ur_robot_gazebo
    prefix=""
    joint_limits_parameters_file="$(arg joint_limit_params)"
    kinematics_parameters_file="$(arg kinematics_params)"
    physical_parameters_file="$(arg physical_params)"
    visual_parameters_file="$(arg visual_params)"
    transmission_hw_interface="$(arg transmission_hw_interface)"
    safety_limits="$(arg safety_limits)"
    safety_pos_margin="$(arg safety_pos_margin)"
    safety_k_position="$(arg safety_k_position)"
  />

  <!--
    Attach the Gazebo model to Gazebo's world frame.

    Note: if you're looking to integrate a UR into a larger scene and need
    to add EEFs or other parts, DO NOT change this file or the 'world' link
    here. Create a NEW xacro instead and decide whether you need to add
    a 'world' link there.
  -->
  <link name="world"/>
  <joint name="world_joint" type="fixed">
    <parent link="world"/>
    <child link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <joint name="base_wjoint" type="fixed">
    <parent link="base_link"/>
    <child link="dbase_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <link name="tool0_controller"/>
  <joint name="tool_controller_fake_joint" type="fixed">
    <parent link="tool0"/>
    <child link="tool0_controller"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  


  <link name="camera_support_link">
    <visual>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh scale="0.001 0.001 0.001" filename="package://ur_description/meshes/ur3e/visual/support_realsense.stl"/>
        </geometry>
        <!--material name="${base_visual_material_name}">
          <color rgba="${base_visual_material_color}"/>
        </material-->
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh scale="0.001 0.001 0.001" filename="package://ur_description/meshes/ur3e/visual/support_realsense.stl"/>
        </geometry>
      </collision>
      <!--xacro:cylinder_inertial radius="${base_inertia_radius}" length="${base_inertia_length}" mass="${base_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial-->
  </link>
  <joint name="camera_support_joint" type="fixed">
    <parent link="tool0_controller"/>
    <child link="camera_support_link"/>
    <origin xyz="0 -0.04 0" rpy="${pi/2} ${pi} ${pi}"/>
  </joint>

  <xacro:sensor_d435i
    name="cam1"
    parent="camera_support_link"
    use_nominal_extrinsics="true">
    <origin xyz="0 0 0" rpy="0 ${pi} ${+pi/2}"/>
  </xacro:sensor_d435i>

  <joint name="camera_base_joint" type="fixed">
    <parent link="camera_support_link"/>
    <child link="camera_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>


  <link name="multispec_cam">
    <visual>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh scale="0.001 0.001 0.001" filename="package://ur_description/meshes/ur3e/visual/micasense.STL"/>
        </geometry>
        <!--material name="${base_visual_material_name}">
          <color rgba="${base_visual_material_color}"/>
        </material-->
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <mesh scale="0.001 0.001 0.001" filename="package://ur_description/meshes/ur3e/visual/micasense.STL"/>
        </geometry>
      </collision>
      <!--xacro:cylinder_inertial radius="${base_inertia_radius}" length="${base_inertia_length}" mass="${base_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial-->
  </link>
  <joint name="multispec_cam_joint" type="fixed">
    <parent link="tool0_controller"/>
    <child link="multispec_cam"/>
    <origin xyz="+0.045 +0.030 0" rpy="0 0 0"/>
  </joint>
  

</robot>
