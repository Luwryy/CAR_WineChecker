<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/les_victor/catkin_mix/src/universal_robot/ur_description/urdf/ur5_g.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="ur5_robot">
    <!--xacro:include filename="$(find ur_description)/urdf/inc/gripper.xacro"/>
    <xacro:gripper
      prefix="${prefix}"
      joint_limits_parameters_file="${joint_limits_parameters_file}"
      kinematics_parameters_file="${kinematics_parameters_file}"
      physical_parameters_file="${physical_parameters_file}"
      visual_parameters_file="${visual_parameters_file}"
      transmission_hw_interface="${transmission_hw_interface}"
      safety_limits="${safety_limits}"
      safety_pos_margin="${safety_pos_margin}"
      safety_k_position="${safety_k_position}"
    /-->
    <?ignore ?>
    <!-- ***************** -->
    <!-- Imported elements -->
    <!-- ***************** -->
    <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
    <gazebo reference="base_footprint">
        <material>Gazebo/Green</material>
        <plugin name="gazebo_ros_control">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>
    <!--transmission name="arm_shoulder_pan_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_shoulder_pan_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_shoulder_pan_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="arm_shoulder_lift_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_shoulder_lift_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_shoulder_lift_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="arm_elbow_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_elbow_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_elbow_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="arm_wrist_1_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_wrist_1_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_wrist_1_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="arm_wrist_2_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_wrist_2_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_wrist_2_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="arm_wrist_3_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_wrist_3_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_wrist_3_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission-->
    <!-- in kg-->
    <!--xacro:macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
  </xacro:macro-->
    <!-- in kg-->
    <!--xacro:macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
  </xacro:macro-->
    <!-- source en.wikipedia.org/wiki/List_of_moments_of_inertia-->
    <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
    <!-- Includes -->
    <!-- Includes -->
    <material name="grey">
        <color rgba="0.75 0.75 0.75 1" />
    </material>
    <!--
    Custom xacro macro for the ur arm with our gripper.
  -->
    <!--
    Base UR robot series xacro macro.

    NOTE: this is NOT a URDF. It cannot directly be loaded by consumers
    expecting a flattened '.urdf' file. See the top-level '.xacro' for that
    (but note: that .xacro must still be processed by the xacro command).

    For use in '.launch' files: use one of the 'load_urX.launch' convenience
    launch files.

    This file models the base kinematic chain of a UR robot, which then gets
    parameterised by various configuration files to convert it into a UR3(e),
    UR5(e), UR10(e) or UR16e.

    NOTE: the default kinematic parameters (ie: link lengths, frame locations,
    offets, etc) do not correspond to any particular robot. They are defaults
    only. There WILL be non-zero offsets between the Forward Kinematics results
    in TF (ie: robot_state_publisher) and the values reported by the Teach
    Pendant.

    For accurate (and robot-specific) transforms, the 'kinematics_parameters_file'
    parameter MUST point to a .yaml file containing the appropriate values for
    the targetted robot.

    If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps
    described in the readme of that repository to extract the kinematic
    calibration from the controller and generate the required .yaml file.

    Main author of the migration to yaml configs: Ludovic Delval.

    Contributors to previous versions (in no particular order):

     - Felix Messmer
     - Kelsey Hawkins
     - Wim Meeussen
     - Shaun Edwards
     - Nadia Hammoudeh Garcia
     - Dave Hershberger
     - G. vd. Hoorn
     - Philip Long
     - Dave Coleman
     - Miguel Prada
     - Mathias Luedtke
     - Marcel Schnirring
     - Felix von Drigalski
     - Felix Exner
     - Jimmy Da Silva
     - Ajit Krisshna N L
     - Muhammad Asif Rana
  -->
    <!--
    NOTE: the macro defined in this file is NOT part of the public API of this
          package. Users CANNOT rely on this file being available, or stored in
          this location. Nor can they rely on the existence of the macro.
  -->
    <joint name="arm_base_joint" type="fixed">
        <parent link="base_link" />
        <child link="arm_base_link" />
        <origin rpy="0.0 0.0 0.0" xyz="0.0 0 0.301585" />
    </joint>
    <!-- ***************** -->
    <!-- Global parameters -->
    <!-- ***************** -->
    <!-- *************** -->
    <!-- Robots Elements -->
    <!-- *************** -->
    <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->
    <link name="base_footprint">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
    </link>
    <joint name="base_footprint_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0.117" />
        <!-- ${wheel_radius} property must be defined inside wheel description -->
        <parent link="base_footprint" />
        <child link="base_link" />
    </joint>
    <!-- BASE_LINK -->
    <link name="base_link">
        <inertial>
            <mass value="25.0" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125" />
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/bases/summit_xl_hl_chassis.dae" />
            </geometry>
            <material name="darkgrey">
                <color rgba="0.1 0.1 0.1 1" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0 " xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/bases/summit_xl_chassis_simple.stl" />
            </geometry>
        </collision>
    </link>
    <!-- Gazebo ros control pluggins -->
    <!--xacro:ros_control/-->
    <?ignore ?>
    <gazebo>
        <plugin filename="libgazebo_ros_skid_steer_drive.so" name="skid_steer_drive_controller">
            <robotNamespace>/summit_xl</robotNamespace>
            <!-- TODO: robot name and param -->
            <updateRate>100.0</updateRate>
            <leftFrontJoint>joint_front_left_wheel</leftFrontJoint>
            <rightFrontJoint>joint_front_right_wheel</rightFrontJoint>
            <leftRearJoint>joint_back_left_wheel</leftRearJoint>
            <rightRearJoint>joint_back_right_wheel</rightRearJoint>
            <!-- wheelSeparation>0.566</wheelSeparation -->
            <!-- real parameter value -->
            <wheelSeparation>1.5</wheelSeparation>
            <!-- works a bit better in Gazebo -->
            <wheelDiameter>0.234</wheelDiameter>
            <robotBaseFrame>base_footprint</robotBaseFrame>
            <torque>50</torque>
            <commandTopic>/summit_xl_control/cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>/odom</odometryFrame>
            <broadcastTF>1</broadcastTF>
            <covariance_x>0.0001</covariance_x>
            <covariance_y>0.0001</covariance_y>
            <covariance_yaw>0.0001</covariance_yaw>
        </plugin>
    </gazebo>
    <!-- WHEELS -->
    <!--WHEEL TIRE -->
    <joint name="joint_front_right_wheel" type="continuous">
        <parent link="base_link" />
        <child link="front_right_wheel" />
        <origin rpy="0 0 0" xyz="0.229112 -0.2314 0.0" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="100" velocity="100" />
        <joint_properties damping="0.0" friction="0.0" />
    </joint>
    <link name="front_right_wheel">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/wheels/rubber_wheel_right.dae" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="0.14" radius="0.117" />
            </geometry>
        </collision>
        <inertial>
            <mass value="6.5" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.03286127852215001" ixy="0.0" ixz="0.0" iyy="0.03286127852215001" iyz="0.0" izz="0.04448925000000001" />
        </inertial>
    </link>
    <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
    <transmission name="front_right_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="joint_front_right_wheel">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="front_right_wheel_joint_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="front_right_wheel">
        <mu1 value="1.0" />
        <mu2 value="1.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <!--WHEEL TIRE -->
    <joint name="joint_front_left_wheel" type="continuous">
        <parent link="base_link" />
        <child link="front_left_wheel" />
        <origin rpy="0 0 0" xyz="0.229112 0.2314 0.0" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="100" velocity="100" />
        <joint_properties damping="0.0" friction="0.0" />
    </joint>
    <link name="front_left_wheel">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/wheels/rubber_wheel_left.dae" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="0.14" radius="0.117" />
            </geometry>
        </collision>
        <inertial>
            <mass value="6.5" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.03286127852215001" ixy="0.0" ixz="0.0" iyy="0.03286127852215001" iyz="0.0" izz="0.04448925000000001" />
        </inertial>
    </link>
    <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
    <transmission name="front_left_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="joint_front_left_wheel">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="front_left_wheel_joint_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="front_left_wheel">
        <mu1 value="1.0" />
        <mu2 value="1.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <!--WHEEL TIRE -->
    <joint name="joint_back_left_wheel" type="continuous">
        <parent link="base_link" />
        <child link="back_left_wheel" />
        <origin rpy="0 0 0" xyz="-0.229112 0.2314 0.0" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="100" velocity="100" />
        <joint_properties damping="0.0" friction="0.0" />
    </joint>
    <link name="back_left_wheel">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/wheels/rubber_wheel_left.dae" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="0.14" radius="0.117" />
            </geometry>
        </collision>
        <inertial>
            <mass value="6.5" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.03286127852215001" ixy="0.0" ixz="0.0" iyy="0.03286127852215001" iyz="0.0" izz="0.04448925000000001" />
        </inertial>
    </link>
    <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
    <transmission name="back_left_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="joint_back_left_wheel">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="back_left_wheel_joint_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="back_left_wheel">
        <mu1 value="1.0" />
        <mu2 value="1.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <!--WHEEL TIRE -->
    <joint name="joint_back_right_wheel" type="continuous">
        <parent link="base_link" />
        <child link="back_right_wheel" />
        <origin rpy="0 0 0" xyz="-0.229112 -0.2314 0.0" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="100" velocity="100" />
        <joint_properties damping="0.0" friction="0.0" />
    </joint>
    <link name="back_right_wheel">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/wheels/rubber_wheel_right.dae" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="0.14" radius="0.117" />
            </geometry>
        </collision>
        <inertial>
            <mass value="6.5" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.03286127852215001" ixy="0.0" ixz="0.0" iyy="0.03286127852215001" iyz="0.0" izz="0.04448925000000001" />
        </inertial>
    </link>
    <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
    <transmission name="back_right_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="joint_back_right_wheel">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="back_right_wheel_joint_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="back_right_wheel">
        <mu1 value="1.0" />
        <mu2 value="1.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <!-- SENSORS -->
    <!-- Hokuyo laser sensors can be parametized with min_angle and max_angle e.g: -->
    <!--xacro:sensor_hokuyo_utm30lx name="hokuyo_base" parent="base_link" min_angle="2.35" max_angle="-2.35"-->
    <!--xacro:sensor_hokuyo_ust10lx prefix="hokuyo_front" parent="base_link">
		<origin xyz="0.376997 -0.210571 0.218585" rpy="0 0 ${-PI/4}"/>
	</xacro:sensor_hokuyo_ust10lx>
	
	<xacro:sensor_hokuyo_ust10lx prefix="hokuyo_rear" parent="base_link">
		<origin xyz="-0.376997 0.210571 0.218585" rpy="0 0 ${-PI/4}"/>
	</xacro:sensor_hokuyo_ust10lx>
	
	<xacro:sensor_axis_m5013 prefix="camera_front" parent="base_link">
		<origin xyz="0.3085 0.1408 0.208585" rpy="0 ${PI/2} 0"/>
	</xacro:sensor_axis_m5013>
	
	<xacro:sensor_axis_m5013 prefix="camera_rear" parent="base_link">
		<origin xyz="-0.3085 -0.1408 0.208585" rpy="0 ${-PI/2} 0"/>
	</xacro:sensor_axis_m5013>
  
	<xacro:sensor_imu prefix="imu" parent="base_link">
		<origin xyz="-0.18 0.0 0.170" rpy="0 0 0"/>
	</xacro:sensor_imu-->
    <transmission name="arm_shoulder_pan_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_shoulder_pan_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_shoulder_pan_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="arm_shoulder_lift_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_shoulder_lift_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_shoulder_lift_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="arm_elbow_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_elbow_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_elbow_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="arm_wrist_1_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_wrist_1_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_wrist_1_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="arm_wrist_2_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_wrist_2_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_wrist_2_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="arm_wrist_3_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="arm_wrist_3_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="arm_wrist_3_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <!-- links: main serial chain -->
    <link name="arm_base_link" />
    <link name="arm_base_link_inertia">
        <visual>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/base.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/base.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="4.0" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.00443333156" ixy="0.0" ixz="0.0" iyy="0.00443333156" iyz="0.0" izz="0.0072" />
        </inertial>
    </link>
    <link name="arm_shoulder_link">
        <visual>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/shoulder.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/shoulder.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="3.7" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.014972352344389999" ixy="0.0" ixz="0.0" iyy="0.014972352344389999" iyz="0.0" izz="0.01040625" />
        </inertial>
    </link>
    <link name="arm_upper_arm_link">
        <visual>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.13585" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/upperarm.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.13585" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/upperarm.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="8.393" />
            <origin rpy="0 1.5707963267948966 0" xyz="-0.2125 0.0 0.136" />
            <inertia ixx="0.1338857818623325" ixy="0.0" ixz="0.0" iyy="0.1338857818623325" iyz="0.0" izz="0.0151074" />
        </inertial>
    </link>
    <link name="arm_forearm_link">
        <visual>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0165" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/forearm.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0165" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/forearm.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="2.275" />
            <origin rpy="0 1.5707963267948966 0" xyz="-0.196125 0.0 0.0165" />
            <inertia ixx="0.03121679102890359" ixy="0.0" ixz="0.0" iyy="0.03121679102890359" iyz="0.0" izz="0.004095" />
        </inertial>
    </link>
    <link name="arm_wrist_1_link">
        <visual>
            <!-- TODO: Move this to a parameter -->
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.093" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/wrist1.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.093" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/wrist1.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="1.219" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.0020138887777775" ixy="0.0" ixz="0.0" iyy="0.0020138887777775" iyz="0.0" izz="0.0021942" />
        </inertial>
    </link>
    <link name="arm_wrist_2_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 -0.095" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/wrist2.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 -0.095" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/wrist2.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="1.219" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.0018310388509175" ixy="0.0" ixz="0.0" iyy="0.0018310388509175" iyz="0.0" izz="0.0021942" />
        </inertial>
    </link>
    <link name="arm_wrist_3_link">
        <visual>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0818" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/wrist3.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0818" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/wrist3.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1879" />
            <origin rpy="0 0 0" xyz="0.0 0.0 -0.01525" />
            <inertia ixx="8.062472608343e-05" ixy="0.0" ixz="0.0" iyy="8.062472608343e-05" iyz="0.0" izz="0.0001321171875" />
        </inertial>
    </link>
    <!-- joints: main serial chain -->
    <joint name="arm_base_link-base_link_inertia" type="fixed">
        <parent link="arm_base_link" />
        <child link="arm_base_link_inertia" />
        <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
    </joint>
    <joint name="arm_shoulder_pan_joint" type="revolute">
        <parent link="arm_base_link_inertia" />
        <child link="arm_shoulder_link" />
        <origin rpy="0 0 0" xyz="0 0 0.089159" />
        <axis xyz="0 0 1" />
        <limit effort="150.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="arm_shoulder_lift_joint" type="revolute">
        <parent link="arm_shoulder_link" />
        <child link="arm_upper_arm_link" />
        <origin rpy="1.570796327 0 0" xyz="0 0 0" />
        <axis xyz="0 0 1" />
        <limit effort="150.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="arm_elbow_joint" type="revolute">
        <parent link="arm_upper_arm_link" />
        <child link="arm_forearm_link" />
        <origin rpy="0 0 0" xyz="-0.425 0 0" />
        <axis xyz="0 0 1" />
        <limit effort="150.0" lower="-3.141592653589793" upper="3.141592653589793" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="arm_wrist_1_joint" type="revolute">
        <parent link="arm_forearm_link" />
        <child link="arm_wrist_1_link" />
        <origin rpy="0 0 0" xyz="-0.39225 0 0.10915" />
        <axis xyz="0 0 1" />
        <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="arm_wrist_2_joint" type="revolute">
        <parent link="arm_wrist_1_link" />
        <child link="arm_wrist_2_link" />
        <origin rpy="1.570796327 0 0" xyz="0 -0.09465 -1.941303950897609e-11" />
        <axis xyz="0 0 1" />
        <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="arm_wrist_3_joint" type="revolute">
        <parent link="arm_wrist_2_link" />
        <child link="arm_wrist_3_link" />
        <origin rpy="1.570796326589793 3.141592653589793 3.141592653589793" xyz="0 0.0823 -1.688001216681175e-11" />
        <axis xyz="0 0 1" />
        <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <!-- ROS-Industrial 'base' frame: base_link to UR 'Base' Coordinates transform -->
    <link name="arm_base" />
    <joint name="arm_base_link-base_fixed_joint" type="fixed">
        <!-- Note the rotation over Z of pi radians: as base_link is REP-103
           aligned (ie: has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
        <parent link="arm_base_link" />
        <child link="arm_base" />
    </joint>
    <!-- ROS-Industrial 'flange' frame: attachment point for EEF models -->
    <link name="arm_flange" />
    <joint name="arm_wrist_3-flange" type="fixed">
        <parent link="arm_wrist_3_link" />
        <child link="arm_flange" />
        <origin rpy="0 -1.5707963267948966 -1.5707963267948966" xyz="0 0 0" />
    </joint>
    <!-- ROS-Industrial 'tool0' frame: all-zeros tool frame -->
    <link name="arm_tool0" />
    <joint name="arm_flange-tool0" type="fixed">
        <!-- default toolframe: X+ left, Y+ up, Z+ front -->
        <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 0" />
        <parent link="arm_flange" />
        <child link="arm_tool0" />
    </joint>
    <!--Camera modelisation-->
    <link name="camera_link">
        <visual>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5_mod/visual/Camera_Herramienta_neumatica.dae" scale="1 1 1" />
            </geometry>
            <!--material name="${wrist_3_visual_material_name}">
          <color rgba="${wrist_3_visual_material_color}"/>
        </material-->
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5_mod/collision/Camera_Herramienta_neumatica.stl" scale="1 1 1" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.01" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="3.333332e-07" ixy="0.0" ixz="0.0" iyy="3.333332e-07" iyz="0.0" izz="5.000000000000001e-07" />
        </inertial>
    </link>
    <joint name="camera_joint" type="fixed">
        <parent link="arm_tool0" />
        <child link="camera_link" />
        <origin rpy="0 0 0" xyz="0 0 0.01" />
        <axis xyz="0 0 1" />
    </joint>
</robot>

